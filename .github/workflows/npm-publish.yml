name: Publish to NPM

on:
  release:
    types: [created]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to publish (e.g., 1.0.0)'
        required: true
        type: string
      tag:
        description: 'NPM tag (latest, beta, next)'
        required: false
        default: 'latest'
        type: string

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build
        run: npm run build
      
      - name: Run tests
        run: npm test
        continue-on-error: true
      
      - name: Type check
        run: npm run typecheck

  publish:
    needs: build-and-test
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build
        run: npm run build
      
      - name: Update version
        if: github.event_name == 'workflow_dispatch'
        run: |
          npm version ${{ github.event.inputs.version }} --no-git-tag-version
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
      
      - name: Publish to NPM
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            npm publish --tag ${{ github.event.inputs.tag }} --access public
          else
            npm publish --access public
          fi
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      
      - name: Create GitHub Release
        if: github.event_name == 'workflow_dispatch'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.event.inputs.version }}
          release_name: Release v${{ github.event.inputs.version }}
          body: |
            ## ðŸš€ Olympus Cloud MCP Server v${{ github.event.inputs.version }}
            
            ### Installation
            ```bash
            npm install -g @olympuscloud/mcp-docs-server
            ```
            
            ### Quick Setup
            ```bash
            # Olympus Cloud setup (recommended)
            olympus-mcp-setup --olympus
            
            # General setup
            olympus-mcp-setup --general
            ```
            
            ### What's New
            - Enhanced Olympus Cloud integration
            - Automatic Claude Code & GitHub Copilot configuration
            - AI-friendly search commands
            - Complete ecosystem indexing
            
            See [OLYMPUS_QUICKSTART.md](https://github.com/olympuscloud/mcp-server-docs-lookup/blob/main/OLYMPUS_QUICKSTART.md) for full documentation.
          draft: false
          prerelease: ${{ github.event.inputs.tag != 'latest' }}
      
      - name: Update GitHub Pages docs
        if: github.event_name == 'workflow_dispatch' && github.event.inputs.tag == 'latest'
        run: |
          echo "Docs update would happen here"
          # Could trigger a separate docs workflow

  announce:
    needs: publish
    runs-on: ubuntu-latest
    if: success()
    steps:
      - name: Announce release
        run: |
          echo "ðŸŽ‰ @olympuscloud/mcp-docs-server has been published!"
          echo "Version: ${{ github.event.inputs.version || github.event.release.tag_name }}"
          echo "Install: npm install -g @olympuscloud/mcp-docs-server"